% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/containment-and-band-creation.R
\name{filament_compression}
\alias{filament_compression}
\title{Compress filaments to filaments with the same number of points (equally
linearly space compared to original filament definition)}
\usage{
filament_compression(grouped_df, data_columns = NULL, number_points = 13)
}
\arguments{
\item{grouped_df}{grouped_df data.frame object (assumed rows per filament are
ordered) - grouped per each filament}

\item{data_columns}{columns of data.frame that relate to
  the filament's coordinates in euclidean space. The input should look like
something like \code{c(S,I,R)} or \code{c("S", "I", "R")}. If the input is
\code{NULL} this function will treat this like all non-group columns.}

\item{number_points}{integer number of points for each filament to be
compressed to}
}
\value{
updated grouped_df with new rows so that each filament has the same
  number of points.
}
\description{
Compress filaments to filaments with the same number of points (equally
linearly space compared to original filament definition)
}
\examples{
library(dplyr)
t13compression <- timeternR::pomp_sir \%>\%
  arrange(time) \%>\% # just to be safe
  select(-H, -cases, -time) \%>\%
  filter(.id <= 5) \%>\%
  group_by(.id) \%>\%
  filament_compression()

t9compression <- timeternR::pomp_sir \%>\%
  filter(.id <= 5) \%>\%
  group_by(.id) \%>\%
  filament_compression(data_columns = c("S","I","R"), number_points = 9)
}
