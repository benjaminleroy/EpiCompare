% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fortify-aggregate-epimodel-netsim.R
\name{fortify_aggregate.netsim}
\alias{fortify_aggregate.netsim}
\title{Take external aggregate data and put it in a format used in this package}
\usage{
\method{fortify_aggregate}{netsim}(data, states = NULL, package_source = NULL)
}
\arguments{
\item{data}{output from external source package.  See details}

\item{states}{names of states we want aggregate totals of at each time}

\item{package_source}{optional argument to include the package from which the
output is derived from, which helps with the fortify function when outputs
are of generic classes such as list or data.frame}
}
\value{
a data frame with the following columns
\describe{
\item{t}{time}
\item{Xk}{columns X0, ..., X_K. which are numeric}
}
}
\description{
Take external aggregate data and put it in a format used in this package
}
\details{
This function converts external data sources (we currently support
  output from the EpiModel and pomp R packages), which is already aggregated
  and puts it in a format that can be used by our exploring functions.
}
\examples{
## For netsim  NOT RUN
## From http://statnet.org/tut/BasicNet.html
## est1 <- netest(nw, formation, target.stats, coef.diss, edapprox = TRUE)

## nw <- network.initialize(n = 1000, directed = FALSE)
## nw <- set.vertex.attribute(nw, "race", rep(0:1, each = 50))
## formation <- ~edges + nodefactor("race") + nodematch("race") + concurrent
## target.stats <- c(250, 375, 225, 100)
## coef.diss <- dissolution_coefs(dissolution = ~offset(edges),
## duration = 25)

## param <- param.net(inf.prob = 0.1, act.rate = 5, rec.rate = 0.02)
## status.vector <- c(rbinom(500, 1, 0.1), rep(0, 500))
## status.vector <- ifelse(status.vector == 1, "i", "s")
## init <- init.net(status.vector = status.vector)
## control <- control.net(type = "SIS", nsteps = 50,
##nsims = 10, epi.by = "race")
## sim1 <- netsim(est1, param, init, control)

## out <- fortify_aggregate(sim1)
## head(out)
}
