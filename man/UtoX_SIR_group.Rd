% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{UtoX_SIR_group}
\alias{UtoX_SIR_group}
\title{UtoX_SIR for grouped data frames}
\usage{
UtoX_SIR_group(U_g, T = NULL)
}
\arguments{
\item{U_g}{grouped data frame, with the following format
\describe{
  \item{init_state}{Initial state for individual (at time t = 0). For the
  states, 0 = S, 1 = I, 2 = R.}
  \item{max_time_S}{maximum time individual was susceptible (S)}
  \item{max_time_I}{maximum time individual was infected (I)}
}}

\item{T}{integer, max length of outbreak (default NULL), shared across
all groups}
}
\value{
\code{sir_out} data frame, with columns
\describe{
  \item{grouping variable name(s)}{column/columns of grouping variable(s)}
  \item{t}{time since outbreak}
  \item{S}{Number of individuals susceptible}
  \item{I}{Number of individuals infected}
  \item{R}{Number of individuals in recovery}
}
}
\description{
UtoX_SIR for grouped data frames
}
\examples{
library(dplyr)
T <- 100
U_g <- hagelloch_raw \%>\% fortify_agents() \%>\%
  filter(SEX \%in\% c("female", "male")) \%>\% group_by(SEX)
sir_group <- UtoX_SIR_group(U_g, T)
U <- U_g \%>\%
  filter(SEX == "female") \%>\% ungroup()
sir_group1 <- UtoX_SIR(U, T)
sir_group_1 <- sir_group \%>\% filter(SEX == "female")
assertthat::are_equal(sir_group1,
                      sir_group_1 \%>\% select(t, S, I, R) \%>\% data.frame)
}
